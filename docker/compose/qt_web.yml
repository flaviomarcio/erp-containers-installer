version: '3.9'

#estudar no futuro
#   ref
#     https://docs.docker.com/desktop/wasm/  
#     https://docs.docker.com/desktop/containerd/
   
networks:
  stack-inbound:
    name: ${APPLICATION_DEPLOY_NETWORK_NAME}
    external: true

services:
  app:
    image: ${APPLICATION_DEPLOY_IMAGE}
    hostname: ${APPLICATION_DEPLOY_HOSTNAME}
    env_file:
      - ${APPLICATION_ENV_FILE}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "${APPLICATION_DEPLOY_HEALTH_CHECK_URL}"]
    #   interval: ${APPLICATION_DEPLOY_HEALTH_CHECK_INTERVAL}
    #   timeout: ${APPLICATION_DEPLOY_HEALTH_CHECK_TIMEOUT}
    #   retries: ${APPLICATION_DEPLOY_HEALTH_CHECK_RETRIES}
    deploy:
      mode: replicated
      replicas: ${APPLICATION_DEPLOY_REPLICAS}
      placement:
        constraints:
          - ${STACK_SERVICE_DEFAULT_NODE_SERVICES}
      resources:
        limits:
          cpus: "${APPLICATION_DEPLOY_CPU}"
          memory: "${APPLICATION_DEPLOY_MEMORY}"
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
      labels:
        - traefik.enable=true
        - traefik.docker.network=${APPLICATION_DEPLOY_NETWORK_NAME}

        - traefik.http.routers.${APPLICATION_DEPLOY_NAME}.rule=Host(`${APPLICATION_DEPLOY_DNS}`)
        - traefik.http.routers.${APPLICATION_DEPLOY_NAME}.service=${APPLICATION_DEPLOY_NAME}
        - traefik.http.routers.${APPLICATION_DEPLOY_NAME}.entrypoints=http
        - traefik.http.services.${APPLICATION_DEPLOY_NAME}.loadbalancer.server.port=${APPLICATION_DEPLOY_PORT}

        - traefik.http.routers.${APPLICATION_DEPLOY_NAME}_pub.rule=Host(`${APPLICATION_DEPLOY_DNS_PUBLIC}`)
        - traefik.http.routers.${APPLICATION_DEPLOY_NAME}_pub.service=${APPLICATION_DEPLOY_NAME}_pub
        - traefik.http.routers.${APPLICATION_DEPLOY_NAME}_pub.entrypoints=http
        - traefik.http.services.${APPLICATION_DEPLOY_NAME}_pub.loadbalancer.server.port=${APPLICATION_DEPLOY_PORT}

        - traefik.http.routers.${APPLICATION_DEPLOY_NAME}_3rdp.rule=Host(`${APPLICATION_DEPLOY_DNS_3RDPARTY}`)
        - traefik.http.routers.${APPLICATION_DEPLOY_NAME}_3rdp.service=${APPLICATION_DEPLOY_NAME}_3rdp
        - traefik.http.routers.${APPLICATION_DEPLOY_NAME}_3rdp.entrypoints=http
        - traefik.http.services.${APPLICATION_DEPLOY_NAME}_3rdp.loadbalancer.server.port=${APPLICATION_DEPLOY_PORT}
        
        # - traefik.enable=true
        # - traefik.docker.network=${APPLICATION_DEPLOY_NETWORK_NAME}
        # - traefik.http.middlewares.redirect.headers.customRequestHeaders.X-Forwarded-Proto=https
        # - traefik.http.routers.${APPLICATION_DEPLOY_NAME}.rule=Host(`${APPLICATION_DEPLOY_DNS}`)
        # - traefik.http.routers.${APPLICATION_DEPLOY_NAME}.service=${APPLICATION_DEPLOY_NAME}
        # - traefik.http.routers.${APPLICATION_DEPLOY_NAME}.entrypoints=http,https
        # - traefik.http.routers.${APPLICATION_DEPLOY_NAME}.tls=true
        # - traefik.http.services.${APPLICATION_DEPLOY_NAME}.loadbalancer.server.port=${APPLICATION_DEPLOY_PORT}

        # - traefik.http.routers.${APPLICATION_DEPLOY_NAME}_pub.rule=Host(`${APPLICATION_DEPLOY_DNS_PUBLIC}`)
        # - traefik.http.routers.${APPLICATION_DEPLOY_NAME}_pub.service=${APPLICATION_DEPLOY_NAME}_pub
        # - traefik.http.routers.${APPLICATION_DEPLOY_NAME}_pub.entrypoints=http,https
        # - traefik.http.routers.${APPLICATION_DEPLOY_NAME}_pub.tls=true
        # - traefik.http.services.${APPLICATION_DEPLOY_NAME}_pub.loadbalancer.server.port=${APPLICATION_DEPLOY_PORT}

        # - traefik.http.routers.${APPLICATION_DEPLOY_NAME}_3rdp.rule=Host(`${APPLICATION_DEPLOY_DNS_3RDPARTY}`)
        # - traefik.http.routers.${APPLICATION_DEPLOY_NAME}_3rdp.service=${APPLICATION_DEPLOY_NAME}_3rdp
        # - traefik.http.routers.${APPLICATION_DEPLOY_NAME}_3rdp.entrypoints=http,https
        # - traefik.http.routers.${APPLICATION_DEPLOY_NAME}_3rdp.tls=true
        # - traefik.http.services.${APPLICATION_DEPLOY_NAME}_3rdp.loadbalancer.server.port=${APPLICATION_DEPLOY_PORT}    

    networks:
      - stack-inbound