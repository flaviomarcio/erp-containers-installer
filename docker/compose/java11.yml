version: '3.9'
   
networks:
  stack-inbound:
    name: ${STACK_NETWORK_INBOUND}
    external: true

services:
  api:
    image: ${APPLICATION_DEPLOY_IMAGE}
    hostname: ${APPLICATION_DEPLOY_HOSTNAME}
    env_file:
      - ${BUILD_APP_ENV_FILE}
    environment:
      - SERVER_CONTEXT_PATH=${BUILD_APP_CONTEXT_PATH}
      - SERVER_PORT=${BUILD_APP_EXPOSE_PORT}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - ${BUILD_APP_EXPOSE_PORT}
    deploy:
      mode: ${BUILD_DEPLOY_MODE}
      replicas: ${APPLICATION_DEPLOY_REPLICAS}
      placement:
        constraints:
          - ${APPLICATION_DEPLOY_NODE}
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
      labels:
          - "traefik.http.routers.${APPLICATION_NAME}.rule=Host(`${BUILD_DEPLOY_DNS}`)"
          - "traefik.http.routers.${APPLICATION_NAME}.service=${BUILD_DEPLOY_APP_NAME}"
          - "traefik.http.services.${APPLICATION_NAME}.loadbalancer.server.port=${BUILD_APP_EXPOSE_PORT}"
          - "traefik.docker.network=${STACK_NETWORK_INBOUND}"
    networks:
      - stack-inbound
