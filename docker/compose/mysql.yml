version: '3.9'
   
networks:
  stack-inbound:
    name: ${APPLICATION_DEPLOY_NETWORK_NAME}
    external: true
    
services:
  db:
    image: ${APPLICATION_DEPLOY_IMAGE}
    hostname: ${APPLICATION_DEPLOY_HOSTNAME}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    #  - ${APPLICATION_DEPLOY_DATA_DIR}:/var/lib/mysql
    command:
      - --default-authentication-plugin=mysql_native_password
    env_file:
      - ${APPLICATION_NAME}.env
    # environment:
    #   # - MYSQL_ALLOW_EMPTY_PASSWORD=yes
    #   - MYSQL_ROOT_PASSWORD=${APPLICATION_DB_PASSWORD}
    #   - MYSQL_DATABASE=${APPLICATION_DB_DATABASE}
    #   - MYSQL_USER=${APPLICATION_DB_USER}
    #   - MYSQL_PASSWORD=${APPLICATION_DB_PASSWORD}
    ports:
      - target: ${APPLICATION_DEPLOY_PORT}
        published: ${APPLICATION_DEPLOY_PORT}
        protocol: tcp
        mode: host
    deploy:
      mode: global
      placement:
        constraints:
          - ${APPLICATION_DEPLOY_NODE}
      resources:
        limits:
          cpus: "${STACK_CPU_DEFAULT}"
          memory: ${STACK_MEMORY_DEFAULT}
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
    networks:
      - stack-inbound