version: '3.9'
   
networks:
  stack-inbound:
    name: ${APPLICATION_DEPLOY_NETWORK_NAME}
    external: true
    
services:
  pg:
    image: ${APPLICATION_DEPLOY_IMAGE}
    hostname: ${APPLICATION_DEPLOY_HOSTNAME}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${APPLICATION_DEPLOY_DATA_DIR}:/postgresql/pg/data
      - ${APPLICATION_DEPLOY_BACKUP_DIR}:/postgresql/pg/backup
    #   - ${BUILD_TEMP_APP_DATA_SOURCE}/postgres/pg_hba.conf:/etc/postgresql/pg_hba.conf
    # env_file:
    #  - ${APPLICATION_DEPLOY_ENV_FILE}
    environment:
      - POSTGRES_USER=${APPLICATION_DB_USER}
      - POSTGRES_PASSWORD=${APPLICATION_DB_PASSWORD}
    ports:
      - target: ${APPLICATION_DEPLOY_PORT}
        published: ${APPLICATION_DEPLOY_PORT}
        protocol: tcp
        mode: host
    deploy:
      mode: global
      placement:
        constraints:
          - node.role==manager
      resources:
          limits:
            cpus: ${STACK_CPU_DEFAULT}
            memory: ${STACK_MEMORY_DEFAULT}
      restart_policy:
        condition: on-failure
    networks:
      - stack-inbound