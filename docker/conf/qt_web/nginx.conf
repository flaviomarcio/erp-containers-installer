user www-data;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;
events {
  worker_connections 1024;
}
http {

  sendfile on;
  proxy_buffer_size   128k;
  proxy_buffers   4 256k;
  proxy_busy_buffers_size   256k;
  large_client_header_buffers 4 16k; 

  #upstream app_servers {
  #    # this must be the same name as the docker container name
  #    # it's how it maps to the service
  #    # you can actually add more than one here if you want to
  #    # unless its in ECS then it's localhost
  #    server web:5000;      
  #}

  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
  access_log  /var/log/nginx/access.log  main;

  keepalive_timeout  65;
  server {
    listen ${APPLICATION_DEPLOY_PORT};
    server_name  localhost;
    location / {
        #root /app;
        #index  index.html;
        ###############################

          # location of the app (html files) in the container
          # this is defined in the Dockerfile for the spa app
          # or in the local file system if you have it published here
          root /app;
          
          # with a spa app we should redirect to /index.html on any not found pages
          try_files $uri $uri/ /index.html =404;
          include /etc/nginx/mime.types;
          default_type application/octet-stream;

          # cache buster
          add_header Last-Modified __CACHE_BUSTER_EXPIRE_DATE_TIME; # this should be replaced by a shell script
          add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
          if_modified_since off;
          expires off;
          etag off;     

    }
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
      root /usr/share/nginx/html;
    }
  }
}
