#!/bin/bash

function __private_call_with_display()
{
  export __private_call_with_display_binary=${1}

  export XDG_RUNTIME_DIR=/tmp/runtime-invservernode
  export TZ=:/etc/localtime

  mkdir -p ${XDG_RUNTIME_DIR}
  chmod 0700 ${XDG_RUNTIME_DIR}

  function clean_exit() {
      pkill -9 -f "Xvfb.*:$C"
  }

  trap "clean_exit" EXIT KILL TERM

  export DISPLAY=":0"
  Xvfb ${DISPLAY} -nolisten tcp -extension RANDR -screen 0 1280x800x24 &
  sleep 2

  cd $(basename ${__private_call_with_display_binary})

  while :
  do
      LD_PRELOAD=/usr/lib/x86_64-linux-gnu/libjemalloc.so.2 ${__private_call_with_display_binary} 2>&1 | tee -a general.log
      sleep 2
  done
}


function callWithDisplay()
{
  callWithDisplay_binary=${1}
  callWithDisplay_binary_dir=$(dirname ${callWithDisplay_binary})

  if ! [[ -f ${callWithDisplay_binary} ]]; then
    echo "Invalid filename"
    return 0;
  fi

  __private_call_with_display ${callWithDisplay_binary}

  cd ${callWithDisplay_binary_dir}
  if [[ -d ./core ]]; then
    rm -rf ./core
  fi

  return 1;
}


export __app_env_file=${PWD}/app.env
export __app_file=${PWD}/app

if [[ -f ${__app_env_file} ]]; then
  source ${__app_env_file}
fi

if ! [[ -f ${__app_file} ]]; then
  echo "File not found: ${__app_file}"
  export;
  pwd
  ls -l
  exit 0
else
  callWithDisplay ${__app_file}
fi