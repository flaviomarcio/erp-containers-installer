#!/bin/bash

export PATH=${PATH}:${BASH_BIN}

. ${BASH_BIN}/bash-util.sh
. ${BASH_BIN}/lib-selector.sh
. ${PWD}/lib/util-prepare.sh
. ${PWD}/lib/util-selectors.sh
. ${PWD}/lib/util-build.sh


function main()
{
  utilInitialize "$@"


  export STACK_ARGS=${1}
  export STACK_ENVIRONMENT=${2}
  export STACK_ACTION=${3}
  export STACK_PROJECT=${4}

  if [[ ${STACK_ENVIRONMENT} != "" && ${STACK_ACTION} != ""  && ${STACK_PROJECT} != "" ]] ; then
    utilPrepareInit 1
    if ! [ "$?" -eq 1 ]; then
      exit 0;
    fi
    runOption 1 ${STACK_ACTION} ${STACK_PROJECT}
    cd ${ROOT_DIR}
    return 1;
  fi


  export STACK_ENVIRONMENT=
  export STACK_ACTION=
  export STACK_PROJECT=

  selectorCustomer 1
  if ! [ "$?" -eq 1 ]; then
    exit 0
  fi

  selectorEnvironment 1
  if ! [ "$?" -eq 1 ]; then
    exit 0
  fi

  utilPrepareInit 1
  if ! [ "$?" -eq 1 ]; then
    exit 0;
  fi

  # utilPrepareClear

  # selectorDeployOption
  # if ! [ "$?" -eq 1 ]; then
  #   exit 0;
  # fi
  
  while :
  do
    cd ${ROOT_DIR}
    export STACK_ACTION=
    export STACK_PROJECT=
    
    while : 
    do
      utilPrepareClear
      selectProject
      if [ "$?" -eq 0 ]; then
        continue;
      elif [ "$?" -eq 2 ]; then
        break;
      else
        LIST=(${STACK_PROJECT})
        for ENV in "${LIST[@]}"
        do
          utilPrepareClear
          export STACK_PROJECT=${ENV}
          runOption 1 ${STACK_ACTION} ${STACK_PROJECT}
        done
      fi
    done
  done

}

main "$@"
