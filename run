#!/bin/bash

. ${BASH_BIN}/bash-util.sh
. ${INSTALLER_DIR}/lib/util-prepare.sh
. ${INSTALLER_DIR}/lib/util-selectors.sh
. ${INSTALLER_DIR}/lib/util-build.sh


function runOption()
{
  logStart ${1} "runOption"
  logMethod ${1} "action: ${STACK_ACTION}"
  logMethod ${1} "project: ${STACK_PROJECT}"
  
  export STACK_ACTION=${2}
  export STACK_PROJECT=${3}

  RUN_FILE=${STACK_INSTALLER_BIN_DIR}/${STACK_ACTION}
  runSource "$(incInt ${1})" ${RUN_FILE} 
  logFinished ${1} "runOption"
}

function main()
{
  echo $(u-env Potiguar)>&/dev/null

  export STACK_ARGS=${1}
  export STACK_ENVIRONMENT=${2}
  export STACK_ACTION=${3}
  export STACK_PROJECT=${4}

  if [[ ${STACK_ENVIRONMENT} != "" && ${STACK_ACTION} != ""  && ${STACK_PROJECT} != "" ]] ; then
    if utilPrepareInit != 1; then
      exit 0;
    fi
    runOption 1 ${STACK_ACTION} ${STACK_PROJECT}
    cd ${ROOT_DIR}
    return 1;
  fi


  export STACK_ENVIRONMENT=
  export STACK_ACTION=
  export STACK_PROJECT=

  if selectEnviroment != 1; then
    log "Invalid call selectEnviroment"
  else
    if utilPrepareInit != 1; then
      exit 0;
    fi
    
    while :
    do
      cd ${ROOT_DIR}
      export STACK_ACTION=
      export STACK_PROJECT=
      
      selectAction
      if ! [ "$?" -eq 1 ]; then
        log "Invalid selectAction"
        break
      fi

      selectProject;
      if ! [ "$?" -eq 1 ]; then
        log "Invalid selectProject"
        continue;
      fi
      runOption 1 ${STACK_ACTION} ${STACK_PROJECT}
    done
  fi
}

utilInitialize "$@"
main "$@"
